<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="70" passed="59" failed="11" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-09-08T15:45:35 IST" name="Suite" finished-at="2025-09-08T15:50:49 IST" duration-ms="313823">
    <groups>
    </groups>
    <test started-at="2025-09-08T15:45:35 IST" name="Test" finished-at="2025-09-08T15:50:49 IST" duration-ms="313823">
      <class name="order.OrderReturnTests">
        <test-method is-config="true" signature="setupReport()[pri:0, instance:order.OrderReturnTests@7ee8290b]" started-at="2025-09-08T15:48:36 IST" name="setupReport" finished-at="2025-09-08T15:48:36 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupReport -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:order.OrderReturnTests@7ee8290b]" started-at="2025-09-08T15:48:36 IST" name="setUp" finished-at="2025-09-08T15:48:37 IST" duration-ms="847" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testRequestAndVerifyProductReturn()[pri:0, instance:order.OrderReturnTests@7ee8290b]" started-at="2025-09-08T15:48:37 IST" name="testRequestAndVerifyProductReturn" finished-at="2025-09-08T15:48:41 IST" duration-ms="4326" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRequestAndVerifyProductReturn -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:order.OrderReturnTests@7ee8290b]" started-at="2025-09-08T15:48:41 IST" name="tearDown" finished-at="2025-09-08T15:48:41 IST" duration-ms="234" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="closeReport()[pri:0, instance:order.OrderReturnTests@7ee8290b]" started-at="2025-09-08T15:48:41 IST" name="closeReport" finished-at="2025-09-08T15:48:41 IST" duration-ms="20" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeReport -->
      </class> <!-- order.OrderReturnTests -->
      <class name="Testcases.OrderHistory">
        <test-method is-config="true" signature="setupReport()[pri:0, instance:Testcases.OrderHistory@75db5df9]" started-at="2025-09-08T15:45:52 IST" name="setupReport" finished-at="2025-09-08T15:45:52 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupReport -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:Testcases.OrderHistory@75db5df9]" started-at="2025-09-08T15:45:52 IST" name="setUp" finished-at="2025-09-08T15:45:53 IST" duration-ms="936" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyOrderHistory()[pri:0, instance:Testcases.OrderHistory@75db5df9]" started-at="2025-09-08T15:45:53 IST" name="verifyOrderHistory" description="Verify order history functionality." finished-at="2025-09-08T15:46:07 IST" duration-ms="13535" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Entering billing details failed expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Entering billing details failed expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at Testcases.OrderHistory.verifyOrderHistory(OrderHistory.java:57)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyOrderHistory -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:Testcases.OrderHistory@75db5df9]" started-at="2025-09-08T15:46:07 IST" name="tearDown" finished-at="2025-09-08T15:46:07 IST" duration-ms="272" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="closeReport()[pri:0, instance:Testcases.OrderHistory@75db5df9]" started-at="2025-09-08T15:46:07 IST" name="closeReport" finished-at="2025-09-08T15:46:07 IST" duration-ms="40" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeReport -->
      </class> <!-- Testcases.OrderHistory -->
      <class name="user.LoginTests">
        <test-method is-config="true" signature="setupReport()[pri:0, instance:user.LoginTests@561b6512]" started-at="2025-09-08T15:49:40 IST" name="setupReport" finished-at="2025-09-08T15:49:40 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupReport -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:user.LoginTests@561b6512]" started-at="2025-09-08T15:49:40 IST" name="setUp" finished-at="2025-09-08T15:49:41 IST" duration-ms="899" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testLoginInvalidCredentials()[pri:0, instance:user.LoginTests@561b6512]" started-at="2025-09-08T15:49:41 IST" name="testLoginInvalidCredentials" finished-at="2025-09-08T15:49:52 IST" duration-ms="11243" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//div[@class='alert alert-danger alert-dismissible']"}
  (Session info: chrome=139.0.7258.155)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.12'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [6867613dafd14ef11e28c886c42e7e2b, findElement {value=//div[@class='alert alert-danger alert-dismissible'], using=xpath}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 139.0.7258.155, chrome: {chromedriverVersion: 139.0.7258.154 (9e0d6b2b47f..., userDataDir: C:\Users\aravi\AppData\Loca...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:61943}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:61943/devtoo..., se:cdpVersion: 139.0.7258.155, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 6867613dafd14ef11e28c886c42e7e2b]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: no such element: Unable to locate element: {"method":"xpath","selector":"//div[@class='alert alert-danger alert-dismissible']"}
  (Session info: chrome=139.0.7258.155)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.12'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [6867613dafd14ef11e28c886c42e7e2b, findElement {value=//div[@class='alert alert-danger alert-dismissible'], using=xpath}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 139.0.7258.155, chrome: {chromedriverVersion: 139.0.7258.154 (9e0d6b2b47f..., userDataDir: C:\Users\aravi\AppData\Loca...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:61943}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:61943/devtoo..., se:cdpVersion: 139.0.7258.155, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 6867613dafd14ef11e28c886c42e7e2b
at org.testng.Assert.fail(Assert.java:111)
at Base.BaseTest.logFailure(BaseTest.java:73)
at user.LoginTests.testLoginInvalidCredentials(LoginTests.java:49)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoginInvalidCredentials -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:user.LoginTests@561b6512]" started-at="2025-09-08T15:49:52 IST" name="tearDown" finished-at="2025-09-08T15:49:53 IST" duration-ms="259" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:user.LoginTests@561b6512]" started-at="2025-09-08T15:49:53 IST" name="setUp" finished-at="2025-09-08T15:49:53 IST" duration-ms="861" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testLoginValidCredentials()[pri:0, instance:user.LoginTests@561b6512]" started-at="2025-09-08T15:49:53 IST" name="testLoginValidCredentials" finished-at="2025-09-08T15:49:54 IST" duration-ms="938" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoginValidCredentials -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:user.LoginTests@561b6512]" started-at="2025-09-08T15:49:54 IST" name="tearDown" finished-at="2025-09-08T15:49:55 IST" duration-ms="205" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="closeReport()[pri:0, instance:user.LoginTests@561b6512]" started-at="2025-09-08T15:49:55 IST" name="closeReport" finished-at="2025-09-08T15:49:55 IST" duration-ms="22" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeReport -->
      </class> <!-- user.LoginTests -->
      <class name="order.OrderCompletionTests">
        <test-method is-config="true" signature="setUp()[pri:0, instance:order.OrderCompletionTests@4c39bec8]" started-at="2025-09-08T15:48:05 IST" name="setUp" finished-at="2025-09-08T15:48:06 IST" duration-ms="866" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setupReport()[pri:0, instance:order.OrderCompletionTests@4c39bec8]" started-at="2025-09-08T15:48:05 IST" name="setupReport" finished-at="2025-09-08T15:48:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupReport -->
        <test-method signature="testPlaceOrderAndVerifyConfirmation()[pri:0, instance:order.OrderCompletionTests@4c39bec8]" started-at="2025-09-08T15:48:06 IST" name="testPlaceOrderAndVerifyConfirmation" finished-at="2025-09-08T15:48:10 IST" duration-ms="3987" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPlaceOrderAndVerifyConfirmation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:order.OrderCompletionTests@4c39bec8]" started-at="2025-09-08T15:48:10 IST" name="tearDown" finished-at="2025-09-08T15:48:10 IST" duration-ms="253" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="closeReport()[pri:0, instance:order.OrderCompletionTests@4c39bec8]" started-at="2025-09-08T15:48:10 IST" name="closeReport" finished-at="2025-09-08T15:48:10 IST" duration-ms="23" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeReport -->
      </class> <!-- order.OrderCompletionTests -->
      <class name="Testcases.EndToEnd">
        <test-method is-config="true" signature="setupReport()[pri:0, instance:Testcases.EndToEnd@58a9760d]" started-at="2025-09-08T15:45:35 IST" name="setupReport" finished-at="2025-09-08T15:45:35 IST" duration-ms="446" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupReport -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:Testcases.EndToEnd@58a9760d]" started-at="2025-09-08T15:45:35 IST" name="setUp" finished-at="2025-09-08T15:45:38 IST" duration-ms="2328" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="endToEndTest()[pri:0, instance:Testcases.EndToEnd@58a9760d]" started-at="2025-09-08T15:45:38 IST" name="endToEndTest" finished-at="2025-09-08T15:45:44 IST" duration-ms="5985" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endToEndTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:Testcases.EndToEnd@58a9760d]" started-at="2025-09-08T15:45:44 IST" name="tearDown" finished-at="2025-09-08T15:45:44 IST" duration-ms="239" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="closeReport()[pri:0, instance:Testcases.EndToEnd@58a9760d]" started-at="2025-09-08T15:45:44 IST" name="closeReport" finished-at="2025-09-08T15:45:45 IST" duration-ms="550" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeReport -->
      </class> <!-- Testcases.EndToEnd -->
      <class name="checkout.CheckoutTests">
        <test-method is-config="true" signature="setupReport()[pri:0, instance:checkout.CheckoutTests@385e9564]" started-at="2025-09-08T15:47:25 IST" name="setupReport" finished-at="2025-09-08T15:47:25 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupReport -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:checkout.CheckoutTests@385e9564]" started-at="2025-09-08T15:47:25 IST" name="setUp" finished-at="2025-09-08T15:47:26 IST" duration-ms="857" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testProceedToCheckoutGuestOption()[pri:1, instance:checkout.CheckoutTests@385e9564]" started-at="2025-09-08T15:47:26 IST" name="testProceedToCheckoutGuestOption" finished-at="2025-09-08T15:47:28 IST" duration-ms="2132" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testProceedToCheckoutGuestOption -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:checkout.CheckoutTests@385e9564]" started-at="2025-09-08T15:47:28 IST" name="tearDown" finished-at="2025-09-08T15:47:28 IST" duration-ms="190" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:checkout.CheckoutTests@385e9564]" started-at="2025-09-08T15:47:28 IST" name="setUp" finished-at="2025-09-08T15:47:29 IST" duration-ms="895" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testGuestCheckoutBillingShipping()[pri:2, instance:checkout.CheckoutTests@385e9564]" started-at="2025-09-08T15:47:29 IST" name="testGuestCheckoutBillingShipping" finished-at="2025-09-08T15:47:42 IST" duration-ms="12728" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Entering billing details failed expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Entering billing details failed expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at checkout.CheckoutTests.testGuestCheckoutBillingShipping(CheckoutTests.java:87)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGuestCheckoutBillingShipping -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:checkout.CheckoutTests@385e9564]" started-at="2025-09-08T15:47:42 IST" name="tearDown" finished-at="2025-09-08T15:47:42 IST" duration-ms="262" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:checkout.CheckoutTests@385e9564]" started-at="2025-09-08T15:47:42 IST" name="setUp" finished-at="2025-09-08T15:47:43 IST" duration-ms="845" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testRegisteredUserCheckout()[pri:3, instance:checkout.CheckoutTests@385e9564]" started-at="2025-09-08T15:47:43 IST" name="testRegisteredUserCheckout" finished-at="2025-09-08T15:47:47 IST" duration-ms="4072" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRegisteredUserCheckout -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:checkout.CheckoutTests@385e9564]" started-at="2025-09-08T15:47:47 IST" name="tearDown" finished-at="2025-09-08T15:47:47 IST" duration-ms="239" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:checkout.CheckoutTests@385e9564]" started-at="2025-09-08T15:47:47 IST" name="setUp" finished-at="2025-09-08T15:47:48 IST" duration-ms="842" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testAddNewDeliveryAddress()[pri:4, instance:checkout.CheckoutTests@385e9564]" started-at="2025-09-08T15:47:48 IST" name="testAddNewDeliveryAddress" finished-at="2025-09-08T15:47:52 IST" duration-ms="4049" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddNewDeliveryAddress -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:checkout.CheckoutTests@385e9564]" started-at="2025-09-08T15:47:52 IST" name="tearDown" finished-at="2025-09-08T15:47:52 IST" duration-ms="227" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:checkout.CheckoutTests@385e9564]" started-at="2025-09-08T15:47:52 IST" name="setUp" finished-at="2025-09-08T15:47:53 IST" duration-ms="863" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testMandatoryAddressFields()[pri:5, instance:checkout.CheckoutTests@385e9564]" started-at="2025-09-08T15:47:53 IST" name="testMandatoryAddressFields" finished-at="2025-09-08T15:47:55 IST" duration-ms="2118" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMandatoryAddressFields -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:checkout.CheckoutTests@385e9564]" started-at="2025-09-08T15:47:55 IST" name="tearDown" finished-at="2025-09-08T15:47:56 IST" duration-ms="215" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="closeReport()[pri:0, instance:checkout.CheckoutTests@385e9564]" started-at="2025-09-08T15:47:56 IST" name="closeReport" finished-at="2025-09-08T15:47:56 IST" duration-ms="22" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeReport -->
      </class> <!-- checkout.CheckoutTests -->
      <class name="search.FilterTests">
        <test-method is-config="true" signature="setUp()[pri:0, instance:search.FilterTests@192c3f1e]" started-at="2025-09-08T15:48:41 IST" name="setUp" finished-at="2025-09-08T15:48:42 IST" duration-ms="869" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setupReport()[pri:0, instance:search.FilterTests@192c3f1e]" started-at="2025-09-08T15:48:41 IST" name="setupReport" finished-at="2025-09-08T15:48:41 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupReport -->
        <test-method signature="testFilterByCategory()[pri:1, instance:search.FilterTests@192c3f1e]" started-at="2025-09-08T15:48:42 IST" name="testFilterByCategory" finished-at="2025-09-08T15:48:53 IST" duration-ms="11252" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"link text","selector":"Monitors"}
  (Session info: chrome=139.0.7258.155)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.12'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [bdff5edb8b274444187a62b46f222dd0, findElement {value=Monitors, using=link text}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 139.0.7258.155, chrome: {chromedriverVersion: 139.0.7258.154 (9e0d6b2b47f..., userDataDir: C:\Users\aravi\AppData\Loca...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:65272}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:65272/devtoo..., se:cdpVersion: 139.0.7258.155, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: bdff5edb8b274444187a62b46f222dd0]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"link text","selector":"Monitors"}
  (Session info: chrome=139.0.7258.155)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.12'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [bdff5edb8b274444187a62b46f222dd0, findElement {value=Monitors, using=link text}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 139.0.7258.155, chrome: {chromedriverVersion: 139.0.7258.154 (9e0d6b2b47f..., userDataDir: C:\Users\aravi\AppData\Loca...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:65272}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:65272/devtoo..., se:cdpVersion: 139.0.7258.155, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: bdff5edb8b274444187a62b46f222dd0
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:368)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:362)
at Pages.ProductsPage.selectCategory(ProductsPage.java:111)
at search.FilterTests.testFilterByCategory(FilterTests.java:25)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFilterByCategory -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:search.FilterTests@192c3f1e]" started-at="2025-09-08T15:48:53 IST" name="tearDown" finished-at="2025-09-08T15:48:54 IST" duration-ms="231" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:search.FilterTests@192c3f1e]" started-at="2025-09-08T15:48:54 IST" name="setUp" finished-at="2025-09-08T15:48:55 IST" duration-ms="859" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testFilterByPriceRange()[pri:2, instance:search.FilterTests@192c3f1e]" started-at="2025-09-08T15:48:55 IST" name="testFilterByPriceRange" finished-at="2025-09-08T15:49:06 IST" duration-ms="11084" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"css selector","selector":"#input\-price\-min"}
  (Session info: chrome=139.0.7258.155)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.12'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [a6c6199f6f02f36528818db4d888c07c, findElement {value=input-price-min, using=id}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 139.0.7258.155, chrome: {chromedriverVersion: 139.0.7258.154 (9e0d6b2b47f..., userDataDir: C:\Users\aravi\AppData\Loca...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:56275}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:56275/devtoo..., se:cdpVersion: 139.0.7258.155, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: a6c6199f6f02f36528818db4d888c07c]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"css selector","selector":"#input\-price\-min"}
  (Session info: chrome=139.0.7258.155)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.12'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [a6c6199f6f02f36528818db4d888c07c, findElement {value=input-price-min, using=id}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 139.0.7258.155, chrome: {chromedriverVersion: 139.0.7258.154 (9e0d6b2b47f..., userDataDir: C:\Users\aravi\AppData\Loca...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:56275}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:56275/devtoo..., se:cdpVersion: 139.0.7258.155, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: a6c6199f6f02f36528818db4d888c07c
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:66)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:368)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:362)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy16.sendKeys(Unknown Source)
at Pages.ProductsPage.setPriceRange(ProductsPage.java:116)
at search.FilterTests.testFilterByPriceRange(FilterTests.java:40)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFilterByPriceRange -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:search.FilterTests@192c3f1e]" started-at="2025-09-08T15:49:06 IST" name="tearDown" finished-at="2025-09-08T15:49:06 IST" duration-ms="255" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:search.FilterTests@192c3f1e]" started-at="2025-09-08T15:49:06 IST" name="setUp" finished-at="2025-09-08T15:49:07 IST" duration-ms="899" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testFilterWithNoMatchingPrice()[pri:3, instance:search.FilterTests@192c3f1e]" started-at="2025-09-08T15:49:07 IST" name="testFilterWithNoMatchingPrice" finished-at="2025-09-08T15:49:18 IST" duration-ms="11119" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"css selector","selector":"#input\-price\-min"}
  (Session info: chrome=139.0.7258.155)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.12'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [02176162f0aa249e0adb875d3bbc5d85, findElement {value=input-price-min, using=id}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 139.0.7258.155, chrome: {chromedriverVersion: 139.0.7258.154 (9e0d6b2b47f..., userDataDir: C:\Users\aravi\AppData\Loca...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:64861}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:64861/devtoo..., se:cdpVersion: 139.0.7258.155, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 02176162f0aa249e0adb875d3bbc5d85]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"css selector","selector":"#input\-price\-min"}
  (Session info: chrome=139.0.7258.155)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.12'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [02176162f0aa249e0adb875d3bbc5d85, findElement {value=input-price-min, using=id}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 139.0.7258.155, chrome: {chromedriverVersion: 139.0.7258.154 (9e0d6b2b47f..., userDataDir: C:\Users\aravi\AppData\Loca...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:64861}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:64861/devtoo..., se:cdpVersion: 139.0.7258.155, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 02176162f0aa249e0adb875d3bbc5d85
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:66)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:368)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:362)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy16.sendKeys(Unknown Source)
at Pages.ProductsPage.setPriceRange(ProductsPage.java:116)
at search.FilterTests.testFilterWithNoMatchingPrice(FilterTests.java:53)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFilterWithNoMatchingPrice -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:search.FilterTests@192c3f1e]" started-at="2025-09-08T15:49:18 IST" name="tearDown" finished-at="2025-09-08T15:49:18 IST" duration-ms="256" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="closeReport()[pri:0, instance:search.FilterTests@192c3f1e]" started-at="2025-09-08T15:49:18 IST" name="closeReport" finished-at="2025-09-08T15:49:18 IST" duration-ms="19" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeReport -->
      </class> <!-- search.FilterTests -->
      <class name="cart.CartValidationTests">
        <test-method is-config="true" signature="setupReport()[pri:0, instance:cart.CartValidationTests@291caca8]" started-at="2025-09-08T15:47:19 IST" name="setupReport" finished-at="2025-09-08T15:47:19 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupReport -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:cart.CartValidationTests@291caca8]" started-at="2025-09-08T15:47:19 IST" name="setUp" finished-at="2025-09-08T15:47:19 IST" duration-ms="782" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testCartSummaryDetails()[pri:1, instance:cart.CartValidationTests@291caca8]" started-at="2025-09-08T15:47:19 IST" name="testCartSummaryDetails" finished-at="2025-09-08T15:47:22 IST" duration-ms="2200" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCartSummaryDetails -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:cart.CartValidationTests@291caca8]" started-at="2025-09-08T15:47:22 IST" name="tearDown" finished-at="2025-09-08T15:47:22 IST" duration-ms="223" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:cart.CartValidationTests@291caca8]" started-at="2025-09-08T15:47:22 IST" name="setUp" finished-at="2025-09-08T15:47:23 IST" duration-ms="797" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testCartPersistenceAcrossPages()[pri:2, instance:cart.CartValidationTests@291caca8]" started-at="2025-09-08T15:47:23 IST" name="testCartPersistenceAcrossPages" finished-at="2025-09-08T15:47:25 IST" duration-ms="2231" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCartPersistenceAcrossPages -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:cart.CartValidationTests@291caca8]" started-at="2025-09-08T15:47:25 IST" name="tearDown" finished-at="2025-09-08T15:47:25 IST" duration-ms="225" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="closeReport()[pri:0, instance:cart.CartValidationTests@291caca8]" started-at="2025-09-08T15:47:25 IST" name="closeReport" finished-at="2025-09-08T15:47:25 IST" duration-ms="23" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeReport -->
      </class> <!-- cart.CartValidationTests -->
      <class name="user.RegistrationTests">
        <test-method is-config="true" signature="setUp()[pri:0, instance:user.RegistrationTests@445b295b]" started-at="2025-09-08T15:50:22 IST" name="setUp" finished-at="2025-09-08T15:50:23 IST" duration-ms="824" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setupReport()[pri:0, instance:user.RegistrationTests@445b295b]" started-at="2025-09-08T15:50:22 IST" name="setupReport" finished-at="2025-09-08T15:50:22 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupReport -->
        <test-method signature="testValidUserRegistration()[pri:1, instance:user.RegistrationTests@445b295b]" started-at="2025-09-08T15:50:23 IST" name="testValidUserRegistration" finished-at="2025-09-08T15:50:25 IST" duration-ms="2182" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidUserRegistration -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:user.RegistrationTests@445b295b]" started-at="2025-09-08T15:50:25 IST" name="tearDown" finished-at="2025-09-08T15:50:25 IST" duration-ms="195" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:user.RegistrationTests@445b295b]" started-at="2025-09-08T15:50:25 IST" name="setUp" finished-at="2025-09-08T15:50:26 IST" duration-ms="848" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testDuplicateEmailRegistration()[pri:2, instance:user.RegistrationTests@445b295b]" started-at="2025-09-08T15:50:26 IST" name="testDuplicateEmailRegistration" finished-at="2025-09-08T15:50:39 IST" duration-ms="12613" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDuplicateEmailRegistration -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:user.RegistrationTests@445b295b]" started-at="2025-09-08T15:50:39 IST" name="tearDown" finished-at="2025-09-08T15:50:39 IST" duration-ms="223" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="closeReport()[pri:0, instance:user.RegistrationTests@445b295b]" started-at="2025-09-08T15:50:39 IST" name="closeReport" finished-at="2025-09-08T15:50:39 IST" duration-ms="19" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeReport -->
      </class> <!-- user.RegistrationTests -->
      <class name="user.UserSessionTests">
        <test-method is-config="true" signature="setupReport()[pri:0, instance:user.UserSessionTests@49e5f737]" started-at="2025-09-08T15:50:39 IST" name="setupReport" finished-at="2025-09-08T15:50:39 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupReport -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:user.UserSessionTests@49e5f737]" started-at="2025-09-08T15:50:39 IST" name="setUp" finished-at="2025-09-08T15:50:40 IST" duration-ms="865" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testLogoutFunctionality()[pri:1, instance:user.UserSessionTests@49e5f737]" started-at="2025-09-08T15:50:40 IST" name="testLogoutFunctionality" finished-at="2025-09-08T15:50:44 IST" duration-ms="4669" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLogoutFunctionality -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:user.UserSessionTests@49e5f737]" started-at="2025-09-08T15:50:44 IST" name="tearDown" finished-at="2025-09-08T15:50:45 IST" duration-ms="224" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="closeReport()[pri:0, instance:user.UserSessionTests@49e5f737]" started-at="2025-09-08T15:50:45 IST" name="closeReport" finished-at="2025-09-08T15:50:45 IST" duration-ms="19" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeReport -->
      </class> <!-- user.UserSessionTests -->
      <class name="cart.CartUpdateTests">
        <test-method is-config="true" signature="setupReport()[pri:0, instance:cart.CartUpdateTests@399c4be1]" started-at="2025-09-08T15:47:08 IST" name="setupReport" finished-at="2025-09-08T15:47:08 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupReport -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:cart.CartUpdateTests@399c4be1]" started-at="2025-09-08T15:47:08 IST" name="setUp" finished-at="2025-09-08T15:47:09 IST" duration-ms="834" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testUpdateCartQuantity()[pri:1, instance:cart.CartUpdateTests@399c4be1]" started-at="2025-09-08T15:47:09 IST" name="testUpdateCartQuantity" finished-at="2025-09-08T15:47:11 IST" duration-ms="2554" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdateCartQuantity -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:cart.CartUpdateTests@399c4be1]" started-at="2025-09-08T15:47:11 IST" name="tearDown" finished-at="2025-09-08T15:47:12 IST" duration-ms="211" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:cart.CartUpdateTests@399c4be1]" started-at="2025-09-08T15:47:12 IST" name="setUp" finished-at="2025-09-08T15:47:12 IST" duration-ms="861" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testInvalidQuantity()[pri:2, instance:cart.CartUpdateTests@399c4be1]" started-at="2025-09-08T15:47:12 IST" name="testInvalidQuantity" finished-at="2025-09-08T15:47:15 IST" duration-ms="2500" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Invalid quantity test failed expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Invalid quantity test failed expected [false] but found [true]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertFalse(Assert.java:79)
at cart.CartUpdateTests.testInvalidQuantity(CartUpdateTests.java:64)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidQuantity -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:cart.CartUpdateTests@399c4be1]" started-at="2025-09-08T15:47:15 IST" name="tearDown" finished-at="2025-09-08T15:47:15 IST" duration-ms="249" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:cart.CartUpdateTests@399c4be1]" started-at="2025-09-08T15:47:15 IST" name="setUp" finished-at="2025-09-08T15:47:16 IST" duration-ms="816" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testRemoveProductFromCart()[pri:3, instance:cart.CartUpdateTests@399c4be1]" started-at="2025-09-08T15:47:16 IST" name="testRemoveProductFromCart" finished-at="2025-09-08T15:47:18 IST" duration-ms="2292" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveProductFromCart -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:cart.CartUpdateTests@399c4be1]" started-at="2025-09-08T15:47:18 IST" name="tearDown" finished-at="2025-09-08T15:47:19 IST" duration-ms="230" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="closeReport()[pri:0, instance:cart.CartUpdateTests@399c4be1]" started-at="2025-09-08T15:47:19 IST" name="closeReport" finished-at="2025-09-08T15:47:19 IST" duration-ms="28" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeReport -->
      </class> <!-- cart.CartUpdateTests -->
      <class name="Testcases.UserIdentity">
        <test-method is-config="true" signature="setUp()[pri:0, instance:Testcases.UserIdentity@6a2f6f80]" started-at="2025-09-08T15:46:51 IST" name="setUp" finished-at="2025-09-08T15:46:51 IST" duration-ms="902" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setupReport()[pri:0, instance:Testcases.UserIdentity@6a2f6f80]" started-at="2025-09-08T15:46:51 IST" name="setupReport" finished-at="2025-09-08T15:46:51 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupReport -->
        <test-method signature="InvalidLogin()[pri:0, instance:Testcases.UserIdentity@6a2f6f80]" started-at="2025-09-08T15:46:51 IST" name="InvalidLogin" description="Verify invalid login scenario." finished-at="2025-09-08T15:46:53 IST" duration-ms="1510" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Login with invalid credentials unexpectedly succeeded. expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Login with invalid credentials unexpectedly succeeded. expected [false] but found [true]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertFalse(Assert.java:79)
at Testcases.UserIdentity.InvalidLogin(UserIdentity.java:73)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InvalidLogin -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:Testcases.UserIdentity@6a2f6f80]" started-at="2025-09-08T15:46:53 IST" name="tearDown" finished-at="2025-09-08T15:46:53 IST" duration-ms="214" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:Testcases.UserIdentity@6a2f6f80]" started-at="2025-09-08T15:46:53 IST" name="setUp" finished-at="2025-09-08T15:46:54 IST" duration-ms="844" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="Login()[pri:0, instance:Testcases.UserIdentity@6a2f6f80]" started-at="2025-09-08T15:46:54 IST" name="Login" description="Verify valid user login." finished-at="2025-09-08T15:46:55 IST" duration-ms="1011" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Login -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:Testcases.UserIdentity@6a2f6f80]" started-at="2025-09-08T15:46:55 IST" name="tearDown" finished-at="2025-09-08T15:46:55 IST" duration-ms="214" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:Testcases.UserIdentity@6a2f6f80]" started-at="2025-09-08T15:46:55 IST" name="setUp" finished-at="2025-09-08T15:46:56 IST" duration-ms="871" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="Registration()[pri:0, instance:Testcases.UserIdentity@6a2f6f80]" started-at="2025-09-08T15:46:56 IST" name="Registration" description="Register a new user and verify login." finished-at="2025-09-08T15:46:58 IST" duration-ms="2212" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Registration -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:Testcases.UserIdentity@6a2f6f80]" started-at="2025-09-08T15:46:58 IST" name="tearDown" finished-at="2025-09-08T15:46:59 IST" duration-ms="213" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:Testcases.UserIdentity@6a2f6f80]" started-at="2025-09-08T15:46:59 IST" name="setUp" finished-at="2025-09-08T15:46:59 IST" duration-ms="811" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="forgottenPassword()[pri:0, instance:Testcases.UserIdentity@6a2f6f80]" started-at="2025-09-08T15:46:59 IST" name="forgottenPassword" description="Verify forgotten password functionality." finished-at="2025-09-08T15:47:02 IST" duration-ms="2392" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- forgottenPassword -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:Testcases.UserIdentity@6a2f6f80]" started-at="2025-09-08T15:47:02 IST" name="tearDown" finished-at="2025-09-08T15:47:02 IST" duration-ms="221" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="closeReport()[pri:0, instance:Testcases.UserIdentity@6a2f6f80]" started-at="2025-09-08T15:47:02 IST" name="closeReport" finished-at="2025-09-08T15:47:02 IST" duration-ms="28" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeReport -->
      </class> <!-- Testcases.UserIdentity -->
      <class name="search.SortAndViewTests">
        <test-method is-config="true" signature="setupReport()[pri:0, instance:search.SortAndViewTests@7494f96a]" started-at="2025-09-08T15:49:27 IST" name="setupReport" finished-at="2025-09-08T15:49:27 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupReport -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:search.SortAndViewTests@7494f96a]" started-at="2025-09-08T15:49:27 IST" name="setUp" finished-at="2025-09-08T15:49:28 IST" duration-ms="906" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testSortByPriceLowToHigh()[pri:1, instance:search.SortAndViewTests@7494f96a]" started-at="2025-09-08T15:49:28 IST" name="testSortByPriceLowToHigh" finished-at="2025-09-08T15:49:30 IST" duration-ms="1429" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSortByPriceLowToHigh -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:search.SortAndViewTests@7494f96a]" started-at="2025-09-08T15:49:30 IST" name="tearDown" finished-at="2025-09-08T15:49:30 IST" duration-ms="233" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:search.SortAndViewTests@7494f96a]" started-at="2025-09-08T15:49:30 IST" name="setUp" finished-at="2025-09-08T15:49:31 IST" duration-ms="848" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testSortByNameAZ()[pri:2, instance:search.SortAndViewTests@7494f96a]" started-at="2025-09-08T15:49:31 IST" name="testSortByNameAZ" finished-at="2025-09-08T15:49:32 IST" duration-ms="1431" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSortByNameAZ -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:search.SortAndViewTests@7494f96a]" started-at="2025-09-08T15:49:32 IST" name="tearDown" finished-at="2025-09-08T15:49:32 IST" duration-ms="252" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:search.SortAndViewTests@7494f96a]" started-at="2025-09-08T15:49:32 IST" name="setUp" finished-at="2025-09-08T15:49:33 IST" duration-ms="780" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testSortByRating()[pri:3, instance:search.SortAndViewTests@7494f96a]" started-at="2025-09-08T15:49:33 IST" name="testSortByRating" finished-at="2025-09-08T15:49:35 IST" duration-ms="1488" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSortByRating -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:search.SortAndViewTests@7494f96a]" started-at="2025-09-08T15:49:35 IST" name="tearDown" finished-at="2025-09-08T15:49:35 IST" duration-ms="214" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:search.SortAndViewTests@7494f96a]" started-at="2025-09-08T15:49:35 IST" name="setUp" finished-at="2025-09-08T15:49:36 IST" duration-ms="797" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testViewProductDetails()[pri:4, instance:search.SortAndViewTests@7494f96a]" started-at="2025-09-08T15:49:36 IST" name="testViewProductDetails" finished-at="2025-09-08T15:49:37 IST" duration-ms="1512" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testViewProductDetails -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:search.SortAndViewTests@7494f96a]" started-at="2025-09-08T15:49:37 IST" name="tearDown" finished-at="2025-09-08T15:49:37 IST" duration-ms="203" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:search.SortAndViewTests@7494f96a]" started-at="2025-09-08T15:49:37 IST" name="setUp" finished-at="2025-09-08T15:49:38 IST" duration-ms="884" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testProductImageGallery()[pri:5, instance:search.SortAndViewTests@7494f96a]" started-at="2025-09-08T15:49:38 IST" name="testProductImageGallery" finished-at="2025-09-08T15:49:40 IST" duration-ms="1505" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testProductImageGallery -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:search.SortAndViewTests@7494f96a]" started-at="2025-09-08T15:49:40 IST" name="tearDown" finished-at="2025-09-08T15:49:40 IST" duration-ms="234" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="closeReport()[pri:0, instance:search.SortAndViewTests@7494f96a]" started-at="2025-09-08T15:49:40 IST" name="closeReport" finished-at="2025-09-08T15:49:40 IST" duration-ms="25" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeReport -->
      </class> <!-- search.SortAndViewTests -->
      <class name="login.LoginTests">
        <test-method is-config="true" signature="setupReport()[pri:0, instance:login.LoginTests@5b94b04d]" started-at="2025-09-08T15:47:56 IST" name="setupReport" finished-at="2025-09-08T15:47:56 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupReport -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:login.LoginTests@5b94b04d]" started-at="2025-09-08T15:47:56 IST" name="setUp" finished-at="2025-09-08T15:47:56 IST" duration-ms="809" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testLoginInvalidCredentials()[pri:0, instance:login.LoginTests@5b94b04d]" started-at="2025-09-08T15:47:56 IST" name="testLoginInvalidCredentials" description="Test login with invalid credentials." finished-at="2025-09-08T15:47:58 IST" duration-ms="1630" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoginInvalidCredentials -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:login.LoginTests@5b94b04d]" started-at="2025-09-08T15:47:58 IST" name="tearDown" finished-at="2025-09-08T15:47:58 IST" duration-ms="235" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:login.LoginTests@5b94b04d]" started-at="2025-09-08T15:47:58 IST" name="setUp" finished-at="2025-09-08T15:47:59 IST" duration-ms="874" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testValidLogin()[pri:0, instance:login.LoginTests@5b94b04d]" started-at="2025-09-08T15:47:59 IST" name="testValidLogin" description="Test successful user registration and login." finished-at="2025-09-08T15:48:05 IST" duration-ms="5824" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidLogin -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:login.LoginTests@5b94b04d]" started-at="2025-09-08T15:48:05 IST" name="tearDown" finished-at="2025-09-08T15:48:05 IST" duration-ms="235" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="closeReport()[pri:0, instance:login.LoginTests@5b94b04d]" started-at="2025-09-08T15:48:05 IST" name="closeReport" finished-at="2025-09-08T15:48:05 IST" duration-ms="29" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeReport -->
      </class> <!-- login.LoginTests -->
      <class name="search.SearchTests">
        <test-method is-config="true" signature="setupReport()[pri:0, instance:search.SearchTests@26b3fd41]" started-at="2025-09-08T15:49:18 IST" name="setupReport" finished-at="2025-09-08T15:49:18 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupReport -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:search.SearchTests@26b3fd41]" started-at="2025-09-08T15:49:18 IST" name="setUp" finished-at="2025-09-08T15:49:19 IST" duration-ms="826" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testValidProductSearch()[pri:1, instance:search.SearchTests@26b3fd41]" started-at="2025-09-08T15:49:19 IST" name="testValidProductSearch" finished-at="2025-09-08T15:49:20 IST" duration-ms="1078" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidProductSearch -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:search.SearchTests@26b3fd41]" started-at="2025-09-08T15:49:20 IST" name="tearDown" finished-at="2025-09-08T15:49:20 IST" duration-ms="243" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:search.SearchTests@26b3fd41]" started-at="2025-09-08T15:49:20 IST" name="setUp" finished-at="2025-09-08T15:49:21 IST" duration-ms="899" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testInvalidProductSearch()[pri:2, instance:search.SearchTests@26b3fd41]" started-at="2025-09-08T15:49:21 IST" name="testInvalidProductSearch" finished-at="2025-09-08T15:49:22 IST" duration-ms="1127" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidProductSearch -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:search.SearchTests@26b3fd41]" started-at="2025-09-08T15:49:22 IST" name="tearDown" finished-at="2025-09-08T15:49:23 IST" duration-ms="192" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:search.SearchTests@26b3fd41]" started-at="2025-09-08T15:49:23 IST" name="setUp" finished-at="2025-09-08T15:49:23 IST" duration-ms="896" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testBlankProductSearch()[pri:3, instance:search.SearchTests@26b3fd41]" started-at="2025-09-08T15:49:23 IST" name="testBlankProductSearch" finished-at="2025-09-08T15:49:25 IST" duration-ms="1333" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBlankProductSearch -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:search.SearchTests@26b3fd41]" started-at="2025-09-08T15:49:25 IST" name="tearDown" finished-at="2025-09-08T15:49:25 IST" duration-ms="216" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:search.SearchTests@26b3fd41]" started-at="2025-09-08T15:49:25 IST" name="setUp" finished-at="2025-09-08T15:49:26 IST" duration-ms="836" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testSpecialCharSearch()[pri:4, instance:search.SearchTests@26b3fd41]" started-at="2025-09-08T15:49:26 IST" name="testSpecialCharSearch" finished-at="2025-09-08T15:49:27 IST" duration-ms="1297" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSpecialCharSearch -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:search.SearchTests@26b3fd41]" started-at="2025-09-08T15:49:27 IST" name="tearDown" finished-at="2025-09-08T15:49:27 IST" duration-ms="197" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="closeReport()[pri:0, instance:search.SearchTests@26b3fd41]" started-at="2025-09-08T15:49:27 IST" name="closeReport" finished-at="2025-09-08T15:49:27 IST" duration-ms="21" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeReport -->
      </class> <!-- search.SearchTests -->
      <class name="Testcases.UIChecks">
        <test-method is-config="true" signature="setupReport()[pri:0, instance:Testcases.UIChecks@1190200a]" started-at="2025-09-08T15:46:45 IST" name="setupReport" finished-at="2025-09-08T15:46:45 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupReport -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:Testcases.UIChecks@1190200a]" started-at="2025-09-08T15:46:45 IST" name="setUp" finished-at="2025-09-08T15:46:46 IST" duration-ms="898" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyLogo()[pri:0, instance:Testcases.UIChecks@1190200a]" started-at="2025-09-08T15:46:46 IST" name="verifyLogo" finished-at="2025-09-08T15:46:47 IST" duration-ms="668" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLogo -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:Testcases.UIChecks@1190200a]" started-at="2025-09-08T15:46:47 IST" name="tearDown" finished-at="2025-09-08T15:46:47 IST" duration-ms="224" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:Testcases.UIChecks@1190200a]" started-at="2025-09-08T15:46:47 IST" name="setUp" finished-at="2025-09-08T15:46:48 IST" duration-ms="826" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyMainMenu()[pri:0, instance:Testcases.UIChecks@1190200a]" started-at="2025-09-08T15:46:48 IST" name="verifyMainMenu" finished-at="2025-09-08T15:46:49 IST" duration-ms="676" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyMainMenu -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:Testcases.UIChecks@1190200a]" started-at="2025-09-08T15:46:49 IST" name="tearDown" finished-at="2025-09-08T15:46:49 IST" duration-ms="211" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:Testcases.UIChecks@1190200a]" started-at="2025-09-08T15:46:49 IST" name="setUp" finished-at="2025-09-08T15:46:50 IST" duration-ms="881" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifySearchBar()[pri:0, instance:Testcases.UIChecks@1190200a]" started-at="2025-09-08T15:46:50 IST" name="verifySearchBar" finished-at="2025-09-08T15:46:50 IST" duration-ms="683" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySearchBar -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:Testcases.UIChecks@1190200a]" started-at="2025-09-08T15:46:50 IST" name="tearDown" finished-at="2025-09-08T15:46:51 IST" duration-ms="211" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="closeReport()[pri:0, instance:Testcases.UIChecks@1190200a]" started-at="2025-09-08T15:46:51 IST" name="closeReport" finished-at="2025-09-08T15:46:51 IST" duration-ms="28" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeReport -->
      </class> <!-- Testcases.UIChecks -->
      <class name="user.MiscTests">
        <test-method is-config="true" signature="setupReport()[pri:0, instance:user.MiscTests@2e377400]" started-at="2025-09-08T15:49:55 IST" name="setupReport" finished-at="2025-09-08T15:49:55 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupReport -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:user.MiscTests@2e377400]" started-at="2025-09-08T15:49:55 IST" name="setUp" finished-at="2025-09-08T15:49:55 IST" duration-ms="803" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testChangeCurrencyPersistence()[pri:1, instance:user.MiscTests@2e377400]" started-at="2025-09-08T15:49:55 IST" name="testChangeCurrencyPersistence" finished-at="2025-09-08T15:49:56 IST" duration-ms="860" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testChangeCurrencyPersistence -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:user.MiscTests@2e377400]" started-at="2025-09-08T15:49:56 IST" name="tearDown" finished-at="2025-09-08T15:49:56 IST" duration-ms="199" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:user.MiscTests@2e377400]" started-at="2025-09-08T15:49:56 IST" name="setUp" finished-at="2025-09-08T15:49:57 IST" duration-ms="894" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testContactUsFormSubmission()[pri:2, instance:user.MiscTests@2e377400]" started-at="2025-09-08T15:49:57 IST" name="testContactUsFormSubmission" finished-at="2025-09-08T15:49:59 IST" duration-ms="1775" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContactUsFormSubmission -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:user.MiscTests@2e377400]" started-at="2025-09-08T15:49:59 IST" name="tearDown" finished-at="2025-09-08T15:49:59 IST" duration-ms="221" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="closeReport()[pri:0, instance:user.MiscTests@2e377400]" started-at="2025-09-08T15:49:59 IST" name="closeReport" finished-at="2025-09-08T15:49:59 IST" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeReport -->
      </class> <!-- user.MiscTests -->
      <class name="cart.AddToCartTests">
        <test-method is-config="true" signature="setupReport()[pri:0, instance:cart.AddToCartTests@45b4c3a9]" started-at="2025-09-08T15:47:02 IST" name="setupReport" finished-at="2025-09-08T15:47:02 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupReport -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:cart.AddToCartTests@45b4c3a9]" started-at="2025-09-08T15:47:02 IST" name="setUp" finished-at="2025-09-08T15:47:03 IST" duration-ms="834" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testAddProductSingleQty()[pri:1, instance:cart.AddToCartTests@45b4c3a9]" started-at="2025-09-08T15:47:03 IST" name="testAddProductSingleQty" finished-at="2025-09-08T15:47:05 IST" duration-ms="1697" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddProductSingleQty -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:cart.AddToCartTests@45b4c3a9]" started-at="2025-09-08T15:47:05 IST" name="tearDown" finished-at="2025-09-08T15:47:05 IST" duration-ms="224" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:cart.AddToCartTests@45b4c3a9]" started-at="2025-09-08T15:47:05 IST" name="setUp" finished-at="2025-09-08T15:47:06 IST" duration-ms="890" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testAddProductSpecificQty()[pri:2, instance:cart.AddToCartTests@45b4c3a9]" started-at="2025-09-08T15:47:06 IST" name="testAddProductSpecificQty" finished-at="2025-09-08T15:47:08 IST" duration-ms="2006" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddProductSpecificQty -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:cart.AddToCartTests@45b4c3a9]" started-at="2025-09-08T15:47:08 IST" name="tearDown" finished-at="2025-09-08T15:47:08 IST" duration-ms="243" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="closeReport()[pri:0, instance:cart.AddToCartTests@45b4c3a9]" started-at="2025-09-08T15:47:08 IST" name="closeReport" finished-at="2025-09-08T15:47:08 IST" duration-ms="39" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeReport -->
      </class> <!-- cart.AddToCartTests -->
      <class name="order.PaymentTests">
        <test-method is-config="true" signature="setup()[pri:0, instance:order.PaymentTests@1e178745]" started-at="2025-09-08T15:48:41 IST" name="setup" finished-at="2025-09-08T15:48:41 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testAcceptTermsAndConditions()[pri:0, instance:order.PaymentTests@1e178745]" started-at="2025-09-08T15:48:41 IST" name="testAcceptTermsAndConditions" finished-at="2025-09-08T15:48:41 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAcceptTermsAndConditions -->
        <test-method signature="testCashOnDelivery()[pri:0, instance:order.PaymentTests@1e178745]" started-at="2025-09-08T15:48:41 IST" name="testCashOnDelivery" finished-at="2025-09-08T15:48:41 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCashOnDelivery -->
        <test-method signature="testPayByCreditCardInvalid()[pri:0, instance:order.PaymentTests@1e178745]" started-at="2025-09-08T15:48:41 IST" name="testPayByCreditCardInvalid" finished-at="2025-09-08T15:48:41 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPayByCreditCardInvalid -->
        <test-method signature="testPayByCreditCardValid()[pri:0, instance:order.PaymentTests@1e178745]" started-at="2025-09-08T15:48:41 IST" name="testPayByCreditCardValid" finished-at="2025-09-08T15:48:41 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPayByCreditCardValid -->
        <test-method signature="testPayByNetBanking()[pri:0, instance:order.PaymentTests@1e178745]" started-at="2025-09-08T15:48:41 IST" name="testPayByNetBanking" finished-at="2025-09-08T15:48:41 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPayByNetBanking -->
        <test-method signature="testPayByUPI()[pri:0, instance:order.PaymentTests@1e178745]" started-at="2025-09-08T15:48:41 IST" name="testPayByUPI" finished-at="2025-09-08T15:48:41 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPayByUPI -->
        <test-method signature="testPaymentMethodsDisplayed()[pri:0, instance:order.PaymentTests@1e178745]" started-at="2025-09-08T15:48:41 IST" name="testPaymentMethodsDisplayed" finished-at="2025-09-08T15:48:41 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPaymentMethodsDisplayed -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:order.PaymentTests@1e178745]" started-at="2025-09-08T15:48:41 IST" name="tearDown" finished-at="2025-09-08T15:48:41 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- order.PaymentTests -->
      <class name="user.WishlistCompareTests">
        <test-method is-config="true" signature="setupReport()[pri:0, instance:user.WishlistCompareTests@6e509ffa]" started-at="2025-09-08T15:50:45 IST" name="setupReport" finished-at="2025-09-08T15:50:45 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupReport -->
        <test-method is-config="true" signature="setup()[pri:0, instance:user.WishlistCompareTests@6e509ffa]" started-at="2025-09-08T15:50:45 IST" name="setup" finished-at="2025-09-08T15:50:45 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:user.WishlistCompareTests@6e509ffa]" started-at="2025-09-08T15:50:45 IST" name="setUp" finished-at="2025-09-08T15:50:45 IST" duration-ms="817" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testAddToWishlist()[pri:1, instance:user.WishlistCompareTests@6e509ffa]" started-at="2025-09-08T15:50:45 IST" name="testAddToWishlist" finished-at="2025-09-08T15:50:49 IST" duration-ms="3227" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddToWishlist -->
        <test-method is-config="true" signature="closeReport()[pri:0, instance:user.WishlistCompareTests@6e509ffa]" started-at="2025-09-08T15:50:49 IST" name="closeReport" finished-at="2025-09-08T15:50:49 IST" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeReport -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:user.WishlistCompareTests@6e509ffa]" started-at="2025-09-08T15:50:49 IST" name="tearDown" finished-at="2025-09-08T15:50:49 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- user.WishlistCompareTests -->
      <class name="order.OrderTests">
        <test-method signature="testSaveOrderToHistory()[pri:0, instance:order.OrderTests@1f59a598]" started-at="2025-09-08T15:48:41 IST" name="testSaveOrderToHistory" finished-at="2025-09-08T15:48:41 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSaveOrderToHistory -->
        <test-method is-config="true" signature="setup()[pri:0, instance:order.OrderTests@1f59a598]" started-at="2025-09-08T15:48:41 IST" name="setup" finished-at="2025-09-08T15:48:41 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:order.OrderTests@1f59a598]" started-at="2025-09-08T15:48:41 IST" name="tearDown" finished-at="2025-09-08T15:48:41 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- order.OrderTests -->
      <class name="Testcases.NegativeScenarios">
        <test-method is-config="true" signature="setupReport()[pri:0, instance:Testcases.NegativeScenarios@33c911a1]" started-at="2025-09-08T15:45:45 IST" name="setupReport" finished-at="2025-09-08T15:45:45 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupReport -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:Testcases.NegativeScenarios@33c911a1]" started-at="2025-09-08T15:45:45 IST" name="setUp" finished-at="2025-09-08T15:45:45 IST" duration-ms="951" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="invalidLogin()[pri:0, instance:Testcases.NegativeScenarios@33c911a1]" started-at="2025-09-08T15:45:45 IST" name="invalidLogin" finished-at="2025-09-08T15:45:47 IST" duration-ms="1640" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidLogin -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:Testcases.NegativeScenarios@33c911a1]" started-at="2025-09-08T15:45:47 IST" name="tearDown" finished-at="2025-09-08T15:45:47 IST" duration-ms="173" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:Testcases.NegativeScenarios@33c911a1]" started-at="2025-09-08T15:45:47 IST" name="setUp" finished-at="2025-09-08T15:45:48 IST" duration-ms="911" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="searchWithBlankInput()[pri:0, instance:Testcases.NegativeScenarios@33c911a1]" started-at="2025-09-08T15:45:48 IST" name="searchWithBlankInput" finished-at="2025-09-08T15:45:50 IST" duration-ms="1304" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchWithBlankInput -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:Testcases.NegativeScenarios@33c911a1]" started-at="2025-09-08T15:45:50 IST" name="tearDown" finished-at="2025-09-08T15:45:50 IST" duration-ms="229" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:Testcases.NegativeScenarios@33c911a1]" started-at="2025-09-08T15:45:50 IST" name="setUp" finished-at="2025-09-08T15:45:51 IST" duration-ms="926" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="searchWithSpecialCharacters()[pri:0, instance:Testcases.NegativeScenarios@33c911a1]" started-at="2025-09-08T15:45:51 IST" name="searchWithSpecialCharacters" finished-at="2025-09-08T15:45:52 IST" duration-ms="1145" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchWithSpecialCharacters -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:Testcases.NegativeScenarios@33c911a1]" started-at="2025-09-08T15:45:52 IST" name="tearDown" finished-at="2025-09-08T15:45:52 IST" duration-ms="178" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="closeReport()[pri:0, instance:Testcases.NegativeScenarios@33c911a1]" started-at="2025-09-08T15:45:52 IST" name="closeReport" finished-at="2025-09-08T15:45:52 IST" duration-ms="46" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeReport -->
      </class> <!-- Testcases.NegativeScenarios -->
      <class name="Testcases.Product">
        <test-method is-config="true" signature="setupReport()[pri:0, instance:Testcases.Product@707194ba]" started-at="2025-09-08T15:46:07 IST" name="setupReport" finished-at="2025-09-08T15:46:07 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupReport -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:Testcases.Product@707194ba]" started-at="2025-09-08T15:46:07 IST" name="setUp" finished-at="2025-09-08T15:46:08 IST" duration-ms="907" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="searchProductAndView()[pri:1, instance:Testcases.Product@707194ba]" started-at="2025-09-08T15:46:08 IST" name="searchProductAndView" description="Search for a product and view its details." finished-at="2025-09-08T15:46:09 IST" duration-ms="1693" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchProductAndView -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:Testcases.Product@707194ba]" started-at="2025-09-08T15:46:09 IST" name="tearDown" finished-at="2025-09-08T15:46:10 IST" duration-ms="226" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:Testcases.Product@707194ba]" started-at="2025-09-08T15:46:10 IST" name="setUp" finished-at="2025-09-08T15:46:11 IST" duration-ms="947" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="browseByCategoryAndFilter()[pri:2, instance:Testcases.Product@707194ba]" started-at="2025-09-08T15:46:11 IST" name="browseByCategoryAndFilter" description="Browse for products by category and filter the results." finished-at="2025-09-08T15:46:12 IST" duration-ms="1333" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browseByCategoryAndFilter -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:Testcases.Product@707194ba]" started-at="2025-09-08T15:46:12 IST" name="tearDown" finished-at="2025-09-08T15:46:12 IST" duration-ms="187" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:Testcases.Product@707194ba]" started-at="2025-09-08T15:46:12 IST" name="setUp" finished-at="2025-09-08T15:46:13 IST" duration-ms="922" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="searchProductInvalid()[pri:3, instance:Testcases.Product@707194ba]" started-at="2025-09-08T15:46:13 IST" name="searchProductInvalid" description="Search for a product with an invalid keyword." finished-at="2025-09-08T15:46:14 IST" duration-ms="1406" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchProductInvalid -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:Testcases.Product@707194ba]" started-at="2025-09-08T15:46:14 IST" name="tearDown" finished-at="2025-09-08T15:46:15 IST" duration-ms="183" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:Testcases.Product@707194ba]" started-at="2025-09-08T15:46:15 IST" name="setUp" finished-at="2025-09-08T15:46:16 IST" duration-ms="876" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="addProductToCart()[pri:4, instance:Testcases.Product@707194ba]" started-at="2025-09-08T15:46:16 IST" name="addProductToCart" description="Add a product to the shopping cart." finished-at="2025-09-08T15:46:17 IST" duration-ms="1847" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addProductToCart -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:Testcases.Product@707194ba]" started-at="2025-09-08T15:46:17 IST" name="tearDown" finished-at="2025-09-08T15:46:18 IST" duration-ms="164" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:Testcases.Product@707194ba]" started-at="2025-09-08T15:46:18 IST" name="setUp" finished-at="2025-09-08T15:46:19 IST" duration-ms="1049" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="checkout()[pri:5, instance:Testcases.Product@707194ba]" started-at="2025-09-08T15:46:19 IST" name="checkout" description="Proceed to checkout." finished-at="2025-09-08T15:46:32 IST" duration-ms="12933" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Entering billing details failed expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Entering billing details failed expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at Testcases.Product.checkout(Product.java:131)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkout -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:Testcases.Product@707194ba]" started-at="2025-09-08T15:46:32 IST" name="tearDown" finished-at="2025-09-08T15:46:32 IST" duration-ms="354" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:Testcases.Product@707194ba]" started-at="2025-09-08T15:46:32 IST" name="setUp" finished-at="2025-09-08T15:46:33 IST" duration-ms="1041" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="updateQuantityAndRemoveProductFromCart()[pri:6, instance:Testcases.Product@707194ba]" started-at="2025-09-08T15:46:33 IST" name="updateQuantityAndRemoveProductFromCart" description="Update quantity and remove a product from the cart." finished-at="2025-09-08T15:46:45 IST" duration-ms="12105" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Update quantity failed expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Update quantity failed expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at Testcases.Product.updateQuantityAndRemoveProductFromCart(Product.java:160)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateQuantityAndRemoveProductFromCart -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:Testcases.Product@707194ba]" started-at="2025-09-08T15:46:45 IST" name="tearDown" finished-at="2025-09-08T15:46:45 IST" duration-ms="223" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="closeReport()[pri:0, instance:Testcases.Product@707194ba]" started-at="2025-09-08T15:46:45 IST" name="closeReport" finished-at="2025-09-08T15:46:45 IST" duration-ms="36" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeReport -->
      </class> <!-- Testcases.Product -->
      <class name="order.CouponTests">
        <test-method signature="testApplyGiftVoucher()[pri:0, instance:order.CouponTests@8c3b9d]" started-at="2025-09-08T15:48:05 IST" name="testApplyGiftVoucher" finished-at="2025-09-08T15:48:05 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testApplyGiftVoucher -->
        <test-method is-config="true" signature="setup()[pri:0, instance:order.CouponTests@8c3b9d]" started-at="2025-09-08T15:48:05 IST" name="setup" finished-at="2025-09-08T15:48:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testApplyInvalidCoupon()[pri:0, instance:order.CouponTests@8c3b9d]" started-at="2025-09-08T15:48:05 IST" name="testApplyInvalidCoupon" finished-at="2025-09-08T15:48:05 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testApplyInvalidCoupon -->
        <test-method signature="testApplyValidCoupon()[pri:0, instance:order.CouponTests@8c3b9d]" started-at="2025-09-08T15:48:05 IST" name="testApplyValidCoupon" finished-at="2025-09-08T15:48:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testApplyValidCoupon -->
        <test-method signature="testRemoveCouponAndVerifyTotals()[pri:0, instance:order.CouponTests@8c3b9d]" started-at="2025-09-08T15:48:05 IST" name="testRemoveCouponAndVerifyTotals" finished-at="2025-09-08T15:48:05 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveCouponAndVerifyTotals -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:order.CouponTests@8c3b9d]" started-at="2025-09-08T15:48:05 IST" name="tearDown" finished-at="2025-09-08T15:48:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- order.CouponTests -->
      <class name="order.OrderHistoryTests">
        <test-method is-config="true" signature="setupReport()[pri:0, instance:order.OrderHistoryTests@f79e]" started-at="2025-09-08T15:48:10 IST" name="setupReport" finished-at="2025-09-08T15:48:10 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupReport -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:order.OrderHistoryTests@f79e]" started-at="2025-09-08T15:48:10 IST" name="setUp" finished-at="2025-09-08T15:48:11 IST" duration-ms="812" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testViewOrderHistoryAndDetails()[pri:0, instance:order.OrderHistoryTests@f79e]" started-at="2025-09-08T15:48:11 IST" name="testViewOrderHistoryAndDetails" finished-at="2025-09-08T15:48:36 IST" duration-ms="24464" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Order history is not displayed expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Order history is not displayed expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at order.OrderHistoryTests.testViewOrderHistoryAndDetails(OrderHistoryTests.java:47)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testViewOrderHistoryAndDetails -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:order.OrderHistoryTests@f79e]" started-at="2025-09-08T15:48:36 IST" name="tearDown" finished-at="2025-09-08T15:48:36 IST" duration-ms="242" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="closeReport()[pri:0, instance:order.OrderHistoryTests@f79e]" started-at="2025-09-08T15:48:36 IST" name="closeReport" finished-at="2025-09-08T15:48:36 IST" duration-ms="20" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeReport -->
      </class> <!-- order.OrderHistoryTests -->
      <class name="user.ProfileTests">
        <test-method is-config="true" signature="setupReport()[pri:0, instance:user.ProfileTests@1757cd72]" started-at="2025-09-08T15:49:59 IST" name="setupReport" finished-at="2025-09-08T15:49:59 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupReport -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:user.ProfileTests@1757cd72]" started-at="2025-09-08T15:49:59 IST" name="setUp" finished-at="2025-09-08T15:50:00 IST" duration-ms="844" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testEditProfileDetails()[pri:1, instance:user.ProfileTests@1757cd72]" started-at="2025-09-08T15:50:00 IST" name="testEditProfileDetails" finished-at="2025-09-08T15:50:08 IST" duration-ms="7518" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEditProfileDetails -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:user.ProfileTests@1757cd72]" started-at="2025-09-08T15:50:08 IST" name="tearDown" finished-at="2025-09-08T15:50:08 IST" duration-ms="195" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:user.ProfileTests@1757cd72]" started-at="2025-09-08T15:50:08 IST" name="setUp" finished-at="2025-09-08T15:50:09 IST" duration-ms="806" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testPasswordChangeFlow()[pri:2, instance:user.ProfileTests@1757cd72]" started-at="2025-09-08T15:50:09 IST" name="testPasswordChangeFlow" finished-at="2025-09-08T15:50:13 IST" duration-ms="3892" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPasswordChangeFlow -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:user.ProfileTests@1757cd72]" started-at="2025-09-08T15:50:13 IST" name="tearDown" finished-at="2025-09-08T15:50:13 IST" duration-ms="207" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:user.ProfileTests@1757cd72]" started-at="2025-09-08T15:50:13 IST" name="setUp" finished-at="2025-09-08T15:50:14 IST" duration-ms="852" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testForgotPasswordResetEmail()[pri:3, instance:user.ProfileTests@1757cd72]" started-at="2025-09-08T15:50:14 IST" name="testForgotPasswordResetEmail" finished-at="2025-09-08T15:50:22 IST" duration-ms="8004" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testForgotPasswordResetEmail -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:user.ProfileTests@1757cd72]" started-at="2025-09-08T15:50:22 IST" name="tearDown" finished-at="2025-09-08T15:50:22 IST" duration-ms="253" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="closeReport()[pri:0, instance:user.ProfileTests@1757cd72]" started-at="2025-09-08T15:50:22 IST" name="closeReport" finished-at="2025-09-08T15:50:22 IST" duration-ms="17" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeReport -->
      </class> <!-- user.ProfileTests -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
